#!/usr/bin/env zsh

export TERM="xterm-256color"

############################ ZSH Options ##############################
# Set up the prompt
autoload -Uz promptinit
promptinit

# Do not enter command lines into the history list if they are duplicates of the previous event.
# Ignore duplication command history list
setopt histignoredups

# Ignore when commands starts with space
# Remove command lines from the history list when the first character on the line is a space,
# or when one of the expanded aliases contains a leading space.
setopt histignorespace

# If a new command line being added to the history list duplicates an older one, the older
# command is removed from the list (even if it is not the previous event).
setopt histignorealldups

# Turns on interactive comments; comments begin with a #.
setopt interactivecomments

# When writing out the history file, older commands that duplicate newer ones are omitted.
setopt histsavenodups

# Automatically use menu completion after the second consecutive request for completion,
# for example by pressing the tab key repeatedly. This option is overridden by MENU_COMPLETE.
setopt auto_menu

# auto change directory
# If a command is issued that can’t be executed as a normal command, and the command is the name
# of a directory, perform the cd command to that directory.
setopt auto_cd

# Complete path when aliased command
# Prevents aliases on the command line from being internally substituted before completion is attempted.
# The effect is to make the alias a distinct command for completion purposes.
setopt complete_aliases

# use brace
# Expand expressions in braces which would not otherwise undergo brace expansion to a lexically ordered
# list of all the characters.
setopt brace_ccl

# auto directory pushd that you can get dirs list by cd -[tab]
# Make cd push the old directory onto the directory stack.
setopt auto_pushd

# compacked complete list display
# Try to make the completion list smaller (occupying less lines) by printing the matches in columns
# with different widths.
setopt list_packed

# no beep sound when complete list displayed
setopt nolistbeep

# no no match found
# If a pattern for filename generation has no matches, print an error, instead of leaving it unchanged
# in the argument list. This also applies to file expansion of an initial ‘~’ or ‘=’.
setopt nonomatch

# multi redirect (e.x. echo "hello" > hoge1.txt > hoge2.txt)
# Perform implicit tees or cats when multiple redirections are attempted.
# http://zsh.sourceforge.net/Doc/Release/Redirection.html#Redirection
setopt multios

# historical backward/forward search with linehead string binded to ^P/^N
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end
############################ End ZSH Options ##############################

# Command history configuration
# Keep 1000000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000000
SAVEHIST=1000000
HISTFILE=$HOME/.zsh_history

# Default completion settings, formatting and messages
# http://zsh.sourceforge.net/Guide/zshguide06.html
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
# zstyle ':completion:*' menu select=long
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
# End default completion settings

# Custom completion settings
zstyle ':completion:*:descriptions' format "$fg[yellow]%B--- %d%b"
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format "$fg[red]No matches for:$reset_color %d"
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
# Needed for conda. To activate the completion cache for packages.
zstyle ':completion::complete:*' use-cache 1
# End custom completing settings

export EDITOR='vim'
export MINICOM='-m -c on'
export PATH=/sbin:$HOME/.local/bin:/usr/sbin:$HOME/.rbenv/bin:/snap/bin:$PATH
# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
export GREP_COLOR="37;45"
export GREP_COLORS="mt=37;45"
# colored man pages
export PAGER="most -s"

# ssh tunnel
# ssh -f ubuntu@remoteip -L 8000:localhost:80 -N
# ssh socks5
# ssh -D 3000 -q -C -N user@host

# Use modern completion system
autoload -Uz compinit
compinit

completions_dir="$HOME/.local/share/zsh/vendor-completions"
if [[ ! -d $completions_dir ]]; then
  mkdir -p $completions_dir
fi

# Load ssh agent keys.
eval "$(ssh-agent -s)" > /dev/null
ssh-add

# kops completion
if (( $+commands[kops] )); then
  source <(kops completion zsh)
fi

# tmuxinator completion
if (( $+commands[tmuxinator] )); then
  if [[ ! -f ~/.local/share/zsh/vendor-completions/_tmuxinator ]]; then
    wget https://raw.githubusercontent.com/tmuxinator/tmuxinator/master/completion/tmuxinator.zsh -O $completions_dir/_tmuxinator
  fi
fi

# exa completions
typeset -a eza_themes
eza_themes=('catppuccin.yml' 'dracula.yml' 'frosty.yml')
if (( $+commands[eza] )); then
  if [[ ! -f ~/.local/share/zsh/vendor-completions/_eza ]]; then
    wget https://github.com/eza-community/eza/blob/0862493ebded918454f97e7291537ce4e2643711/completions/zsh/_eza -O $completions_dir/_eza
  fi
  if [[ ! -d ~/.config/eza ]]; then
    mkdir -p ~/.config/eza
    for theme in "${eza_themes[@]}"; do
      wget https://github.com/eza-community/eza-themes/blob/74be26bbd2ce76b29c37250a2fb7cb5d6644c964/themes/$theme -O ~/.config/eza/$theme
    done
  fi
  if [[ ! -L ~/.config/eza/theme.yml ]]; then
    ln -s ~/.config/eza/catppuccin.yml ~/.config/eza/theme.yml
  fi
fi

# Terraform autocomplete
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/bin/terraform terraform

# Install and load rbenv automatically
if (( $+commands[rbenv] )); then
  [ -h ~/.rbenv/bin/rbenv ] && eval "$(rbenv init - --no-rehash zsh)"
  [ ! -L ~/.local/share/zsh/vendor-completions/_rbenv ] && ln -s ~/.rbenv/completions/_rbenv ~/.local/share/zsh/vendor-completions
else
  git clone https://github.com/rbenv/rbenv.git ~/.rbenv
fi

# pyenv stuff
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH" && eval "$(pyenv init -)"

# Colorls
if (( $+commands[gem] )); then
  source $(dirname $(gem which colorls))/tab_complete.sh
  fpath=($completions_dir "$(dirname $(gem which colorls))/../zsh" $fpath)
fi

# Load sheldon plugin manager
if (( $+commands[sheldon] )); then
  export ZSH="$HOME/.local/share/sheldon/repos/github.com/ohmyzsh/ohmyzsh"
  eval "$(sheldon source)"
fi

# Sourcing aliases
source $HOME/.aliases

# awscli autocomplete
autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit
complete -C "$HOME/.local/bin/aws_completer" aws

# Load fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Load atuin
if (( $+commands[atuin] )); then
  . "$HOME/.atuin/bin/env"
  eval "$(atuin init zsh)"
fi

# Load starship
if (( $+commands[starship] )); then
  eval "$(starship init zsh)"
fi

# pipx autocomplete
if (( $+commands[pipx] )); then
  eval "$(register-python-argcomplete pipx)"
fi
